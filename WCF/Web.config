<?xml version="1.0"?>

<configuration>
    <appSettings>
        <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
    </appSettings>
    <system.web>
        <compilation debug="false" targetFramework="4.6.1" />
        <!-- determine how many worker threads and completion port threads must be available to start a remote request or a local request
         If there are not sufficient threads available,
         the request is queued until sufficient threads are free to make the request.
         So, ASP.NET will not execute more than the following number of requests at the same time
         
         Set the values of the maxWorkerThreads parameter and the maxIoThreads parameter to 100.
         Set the value of the maxconnection parameter to 12*N (where N is the number of CPUs that you have).
         Set the values of the minFreeThreads parameter to 88*N and the minLocalRequestFreeThreads parameter to 76*N.
         Set the value of minWorkerThreads to 50. Remember, minWorkerThreads is not in the configuration file by default. You must add it.
         -->
        <httpRuntime targetFramework="4.6.1"
                     maxRequestLength="262144"
                     executionTimeout="103600"
                     minFreeThreads="8"
                     minLocalRequestFreeThreads="8" />

        <processModel maxWorkerThreads="100"
                      maxIoThreads="100"
                      minWorkerThreads="50"/>
    </system.web>
    <system.net>
        <connectionManagement>
            <add address="*" maxconnection="200" />
        </connectionManagement>
    </system.net>
    <system.serviceModel>
        <behaviors>
            <serviceBehaviors>
                <behavior>
                    <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
                    <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true" />
                    <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
                    <serviceDebug includeExceptionDetailInFaults="false" />
                    <!-- 
                    maxConcurrentCalls : defines the maximum number of messages actively processed by all the service instances of a ServiceHost.
                    The default value is 16. Calls in excess of the limit are queued.
                    
                    maxConcurrentInstances : defines the maximum number of service instances that can execute at the same time.
                    The default value is Int32.MaxValue.
                    Requests to create additional instances are queued and complete when a slot below the limit becomes available.
                    
                    maxConcurrentSessions : defines the maximum number of sessions that a ServiceHost instance can accept at one time.
                    -->
                    <serviceThrottling
                        maxConcurrentCalls="200"
                        maxConcurrentSessions="200"
                        maxConcurrentInstances="200" />
                </behavior>
            </serviceBehaviors>
        </behaviors>
        <protocolMapping>
            <add binding="basicHttpsBinding" scheme="https" />
        </protocolMapping>
        <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
    </system.serviceModel>
    <system.webServer>
        <modules runAllManagedModulesForAllRequests="true" />
        <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
        <directoryBrowse enabled="true" />
    </system.webServer>
</configuration>